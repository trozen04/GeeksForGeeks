class Solution {
    public static int minimizeDifference(int n, int k, int[] arr) {
        
        int res = Integer.MAX_VALUE;
        int[] maxarr = new int[n];
        int[] minarr = new int[n];
        maxarr[n-1] = arr[n-1];
        minarr[n-1] = arr[n-1];
        int max = 0, min = Integer.MAX_VALUE;
        for(int i = n-2; i >= 0; i--){
            maxarr[i] = Math.max(maxarr[i+1], arr[i]);
            minarr[i] = Math.min(minarr[i+1], arr[i]);
        }
        
        int i = 0, j = k-1;
        
        while(j < n){
            if(i != 0){
                min = Math.min(min, arr[i-1]);
                max = Math.max(max, arr[i-1]);
            }
            int rmin = min, rmax = max;
            if(j != n-1){
                rmin = Math.min(rmin, minarr[j+1]);
                rmax = Math.max(rmax, maxarr[j+1]);
            }
            res = Math.min(res, rmax - rmin);
            i++;
            j++;
        }
        
        return res;
    }
}
